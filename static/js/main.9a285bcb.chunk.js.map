{"version":3,"sources":["images/aerlux.png","images/shop.png","images/recruitment-app.png","images/flickr.png","images/weather-app.png","components/NavBars/NavBar.js","service/ProjectsData.js","components/Cards/Project.js","components/Footer/Footer.js","components/Wrapper/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","className","href","ProjectsData","JobApp","WeatherApp","OnlineStore","Flickr","Aerlux","map","data","i","key","src","image","alt","title","description","tech","demoLink","target","rel","sourceCodeLink","footer","Wrapper","Project","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,uMCe5BC,MAZf,WACE,OACE,yBAAKC,UAAU,uBACZ,uBAAGC,KAAK,IAAID,UAAU,YAAtB,eACA,yBAAKA,UAAU,aACd,uBAAGC,KAAK,2CAAR,YADD,OAEC,uBAAGA,KAAK,8BAAR,c,wFCFKC,EAAgB,CACzB,CACI,MAAQ,sBACR,YAAc,qJACd,KAAQ,CAAC,cAAc,WAAY,cAAe,kBAAkB,qBAAsB,aAAc,QAAS,UAAW,eAC3H,SAAW,GACX,eAAiB,oCACjB,MAAQC,KAGZ,CACG,MAAQ,cACR,YAAc,iEACd,KAAQ,CAAC,cAAc,WAAY,QAClC,SAAW,0CACX,eAAiB,wCACjB,MAAQC,KAGb,CACI,MAAQ,eACR,YAAc,gOACd,KAAQ,CAAC,QAAS,gBAAiB,WAAW,UAAU,aAAc,QAAS,aAAc,SAAS,WACrG,SAAW,GACX,eAAiB,oDACjB,MAAQC,KAGb,CACI,MAAQ,aACR,YAAc,wGACd,KAAQ,CAAC,QAAS,WAAY,aAAa,qBAC1C,SAAW,0CACX,eAAiB,0CACjB,MAAQC,KAGZ,CACG,MAAQ,aACR,YAAc,0MACd,KAAQ,CAAC,QAAQ,WAAY,YAAa,aAAc,SAAS,QAAS,QACzE,SAAW,oBACX,eAAiB,GACjB,MAAQC,MCVFA,MAnCf,WACE,OAAOL,EAAaM,KAAI,SAACC,EAAKC,GAC5B,OACI,yBAAMC,IAAKD,GACT,yBAAKV,UAAU,gCACb,yBAAKY,IAAKH,EAAKI,MAAOC,IAAKL,EAAKM,MAASf,UAAU,YACnD,yBAAKA,UAAU,gBACb,4BAAI,2BAAIS,EAAKM,SAEf,yBAAKf,UAAU,gBACb,2BAAIS,EAAKO,aACNP,EAAKQ,KAAKT,KAAI,SAACS,EAAKP,GACnB,OACE,wBAAIC,IAAKD,EAAGV,UAAU,wBACpB,4BAAKiB,OAGX,yBAAKjB,UAAU,UACdS,EAAKS,SACN,yBAAKlB,UAAU,gBACb,2BAAG,4BAAQA,UAAU,mDAAkD,+BAAI,uBAAGC,KAAMQ,EAAKS,SAAUC,OAAO,SAASC,IAAI,uBAA5C,iBACrE,KACPX,EAAKY,eACN,yBAAKrB,UAAU,gBACZ,2BAAG,4BAAQA,UAAU,qDAAoD,+BAAI,uBAAGC,KAAMQ,EAAKY,eAAgBF,OAAO,QAAQC,IAAI,uBAAjD,wBACvE,aCjBVE,MAVf,WACE,OACE,yBAAKtB,UAAU,oEACZ,2CAAgB,uBAAGC,KAAK,0CAA0CkB,OAAO,SAASC,IAAI,uBAAtE,YAAhB,OAA4H,uBAAGnB,KAAK,6BAA6BkB,OAAO,SAASC,IAAI,uBAAzD,cCgBpHG,MAhBf,WACE,OACE,oCACE,yBAAKvB,UAAU,uBACb,yBAAKA,UAAU,kBACb,kBAAC,EAAD,MACA,kBAACwB,EAAD,QAGJ,6BACE,kBAACC,EAAD,SCLOC,MARf,WACE,OACE,yBAAK1B,UAAU,OACb,kBAAC,EAAD,QCMc2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.9a285bcb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aerlux.027e218f.png\";","module.exports = __webpack_public_path__ + \"static/media/shop.be6362eb.png\";","module.exports = __webpack_public_path__ + \"static/media/recruitment-app.6f2b94ef.png\";","module.exports = __webpack_public_path__ + \"static/media/flickr.cf8fd92b.png\";","module.exports = __webpack_public_path__ + \"static/media/weather-app.c15ccc5c.png\";","import React from 'react';\nimport '../../css/NavBar.css';\n\nfunction NavBar() {\n  return (\n    <div className='navbar w3-container'>\n       <a href=\"/\" className='nav-item'>My Projects</a>\n       <div className=\"w3-right \">\n        <a href=\"https://www.linkedin.com/in/prodanradu/\">LinkedIn</a>&nbsp;\n        <a href=\"https://github.com/radu200\">GitHub </a> \n       </div>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import Aerlux from './../images/aerlux.png'\nimport OnlineStore from './../images/shop.png'\nimport JobApp from '../images/recruitment-app.png'\nimport Flickr from '../images/flickr.png'\nimport WeatherApp from '../images/weather-app.png'\n\n\nexport const ProjectsData  = [\n    {\n        'title':'Recruitment Web App',\n        'description':'Recruitment Web App still in progress.Icluding features like candidate  search, job search, user roles & permissions, account, authentication etc.',\n        'tech': ['react/redux','css/scss', 'material-ui', 'materialize-css','node.js/express.js', 'javascript', 'mysql', 'webpack', 'jest/enzyme' ],\n         'demoLink':'',\n         'sourceCodeLink':'https://github.com/radu200/JobApp',\n         'image':JobApp\n     },\n\n     {\n        'title':'Weather App',\n        'description':'Weather app that forecast weather for every 3 hours of the day',\n        'tech': ['react/redux','css/scss', 'jest' ],\n         'demoLink':'https://radu200.github.io/weatherApp/#/',\n         'sourceCodeLink':'https://github.com/radu200/weatherApp',\n         'image':WeatherApp\n     },\n\n    {\n        'title':'Online Store',\n        'description':'Ecommerce shop for selling digital products including features like user roles & permissions, account,search filters, shopping cart, authentication, payment gateway paypal and stripe, dashboard with product management etc',\n        'tech': ['html5', 'handlebars.js', 'css/scss','node.js','express.js', 'mysql', 'javascript', 'jquery','webpack'],\n         'demoLink':'',\n         'sourceCodeLink':'https://github.com/radu200/Nodejs-Ecommerce-Store',\n         'image':OnlineStore\n     },\n \n    {\n        'title':'Flickr App',\n        'description':'Implement a simple web front-end using React to search and display images from the flickr public API.',\n        'tech': ['react', 'css/scss', 'javascript','responsive design'],\n         'demoLink':'https://radu200.github.io/flickr-react/',\n         'sourceCodeLink':'https://github.com/radu200/flickr-react',\n         'image':Flickr\n     },\n\n     {\n        'title':'Aerlux.com',\n        'description':'Aerlux.com is a travel fare aggregator website and travel metasearch engine for lodging reservations.Worked as a part of a small focused team on features like : search, calendar,resposive-design etc.',\n        'tech': ['html5','css/scss', 'bootstrap', 'javascript', 'jquery','react', 'jest'],\n         'demoLink':'https://aerlux.md',\n         'sourceCodeLink':'',\n         'image':Aerlux\n     },\n     \n    \n]","import React from 'react';\nimport '../../css/PostCard.css';\nimport {ProjectsData} from '../../service/ProjectsData'\n \n\nfunction Aerlux() {\n  return ProjectsData.map((data,i) =>{\n    return(\n        <div  key={i} >\n          <div className=\"w3-card-4 w3-margin w3-white\">\n            <img src={data.image} alt={data.title}   className=\"PostImg\"/>\n            <div className=\"w3-container\">\n              <h3><b>{data.title}</b></h3>\n             </div>      \n            <div className=\"w3-container\">\n              <p>{data.description}</p>\n                {data.tech.map((tech,i) => {\n                  return(\n                    <ul key={i} className=\"w3-ul w3-border tech\" >\n                      <li>{tech}</li>\n                    </ul>\n                  )})}\n                <div className=\"w3-row\">\n                {data.demoLink ? \n                <div className=\"w3-col m2 s6\">\n                  <p><button className=\"w3-button w3-padding-large  w3-white w3-border \"><b> <a href={data.demoLink} target=\"_blank\" rel=\"noopener noreferrer\">DEMO »</a></b></button></p>\n                </div> :null }\n                {data.sourceCodeLink ? \n                <div className=\"w3-col m2 s6\">\n                   <p><button className=\"w3-button w3-padding-large  w3-white w3-border   \"><b> <a href={data.sourceCodeLink} target=\"_bank\" rel=\"noopener noreferrer\">Source Code »</a></b></button></p>\n                </div> : null }\n              \n              </div>\n            </div>\n          </div>\n        </div>\n    )\n  })\n}\n\nexport default Aerlux;\n","import React from 'react';\n\n\nfunction footer() {\n  return (\n    <div className=\"w3-container w3-light-grey w3-padding-32 w3-margin-top w3-center\">\n       <p>Follow me on <a href=\"https://www.linkedin.com/in/prodanradu/\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a> or <a href=\"https://github.com/radu200\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub </a></p>\n   </div>\n \n\n  );\n}\n\nexport default footer;\n","import React from \"react\";\nimport \"../../css/Wrapper.css\";\nimport NavBar from \"../../components/NavBars/NavBar\";\nimport ProjectCard from \"../Cards/Project\";\nimport Footer from \"../Footer/Footer\";\n\nfunction Wrapper() {\n  return (\n    <>\n      <div className=\" w3-content w3-row \">\n        <div className=\"w3-col l10 s12\">\n          <NavBar />\n          <ProjectCard />\n        </div>\n      </div>\n      <div>\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport Wrapper from \"./components/Wrapper/Wrapper\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}